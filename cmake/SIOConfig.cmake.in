##############################################################################
# cmake configuration file for SIO
#
# requires:
#   MacroCheckPackageLibs.cmake for checking package libraries
#
# returns following variables:
#
#   SIO_FOUND      : set to TRUE if SIO found
#       if FIND_PACKAGE called with REQUIRED and COMPONENTS arguments
#       SIO_FOUND is only set to TRUE if ALL components are also found
#       if REQUIRED is NOT set components may or may not be available
#
#   SIO_ROOT       : path to this SIO installation
#   SIO_VERSION    : package version
#   SIO_LIBRARIES  : list of SIO libraries (NOT including COMPONENTS)
#   SIO_INCLUDE_DIRS  : list of paths to be used with INCLUDE_DIRECTORIES
#   SIO_LIBRARY_DIRS  : list of paths to be used with LINK_DIRECTORIES
#   SIO_COMPONENT_LIBRARIES      : list of SIO component libraries
#   SIO_${COMPONENT}_FOUND       : set to TRUE or FALSE for each library
#   SIO_${COMPONENT}_LIBRARY     : path to individual libraries
#   SIO_${COMPONENT}_LIB_DEPENDS : individual library dependencies
#
# @author Jan Engels, Desy
# @author Remi Ete, Desy
##############################################################################

SET( SIO_ROOT "@CMAKE_INSTALL_PREFIX@" )
SET( SIO_VERSION "@SIO_VERSION@" )


# ---------- include dirs -----------------------------------------------------
# do not store find results in cache
SET( SIO_INCLUDE_DIRS SIO_INCLUDE_DIRS-NOTFOUND )
MARK_AS_ADVANCED( SIO_INCLUDE_DIRS )

FIND_PATH( SIO_INCLUDE_DIRS
	NAMES sio/definitions.h
	PATHS ${SIO_ROOT}/include
	NO_DEFAULT_PATH
)

IF( @SIO_MACROS_WITH_EXCEPTION@ )
  ADD_DEFINITIONS( "-DSIO_MACROS_WITH_EXCEPTION=1" )
ENDIF()
ADD_DEFINITIONS( "-DSIO_LOGLVL=@SIO_LOGLVL@" )

# ---------- libraries --------------------------------------------------------
INCLUDE( "${SIO_ROOT}/lib/cmake/MacroCheckPackageLibs.cmake" )

# only standard libraries should be passed as arguments to CHECK_PACKAGE_LIBS
# additional components are set by cmake in variable PKG_FIND_COMPONENTS
# first argument should be the package name
CHECK_PACKAGE_LIBS( SIO sio )


# ---------- final checking ---------------------------------------------------
INCLUDE( FindPackageHandleStandardArgs )
# set SIO_FOUND to TRUE if all listed variables are TRUE and not empty
# SIO_COMPONENT_VARIABLES will be set if FIND_PACKAGE is called with REQUIRED argument
FIND_PACKAGE_HANDLE_STANDARD_ARGS( SIO DEFAULT_MSG SIO_ROOT SIO_INCLUDE_DIRS SIO_LIBRARIES ${SIO_COMPONENT_VARIABLES} ) #ZLIB_LIBRARIES )

